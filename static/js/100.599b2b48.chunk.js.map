{"version":3,"file":"static/js/100.599b2b48.chunk.js","mappings":"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","sources":["servises/formatDate.js","servises/tmdb-api.js","webpack://goit-react-hw-05-movies/./src/views/MovieDetails/MovieDetails.module.css?d4e2","views/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { format } from 'date-fns';\n\nexport const formatDate = date => {\n  return format(new Date(date), ' (yyyy)');\n};\n","import axios from 'axios';\n\nconst API_KEY = '1f2e1346f84e3b2d486a79ce9b661dcb';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nconst getApiData = async (url, data) => {\n  try {\n    const response = await axios.get(url, data);\n\n    if (!response.data) throw new Error(response.statusText);\n    return response.data;\n  } catch (error) {\n    console.log(`Error making GET request to ${url}: ${error.message}`);\n  }\n};\n\nexport const getTrending = async () => await getApiData('/trending/movie/day');\n\nexport const getDetails = async movie_id =>\n  await getApiData(`/movie/${movie_id}`);\n\nexport const getCredits = async movie_id =>\n  await getApiData(`/movie/${movie_id}/credits`);\n\nexport const getReviews = async movie_id =>\n  await getApiData(`/movie/${movie_id}/reviews`);\n\nexport const getSearchByQuery = async query =>\n  await getApiData(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n","// extracted by mini-css-extract-plugin\nexport default {\"details\":\"MovieDetails_details__Z1Lvy\",\"additional\":\"MovieDetails_additional__rtG-m\",\"back\":\"MovieDetails_back__7nuxm\",\"poster\":\"MovieDetails_poster__Bnqsi\",\"container\":\"MovieDetails_container__YdSwN\",\"nav\":\"MovieDetails_nav__RcdIO\",\"nav-item\":\"MovieDetails_nav-item__ZpuvF\",\"navLink\":\"MovieDetails_navLink__VEjoj\",\"activeLink\":\"MovieDetails_activeLink__ZEBJL\"};","import { Link, NavLink, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense, useRef } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { formatDate } from 'servises/formatDate';\nimport css from './MovieDetails.module.css';\n\nimport { getDetails } from 'servises/tmdb-api';\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getDetails(movieId).then(results => {\n      setMovie(results);\n      setLoading(false);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      <Link className={css.back} to={backLinkLocationRef.current}>\n        &#x2190; Go back\n      </Link>\n      {isLoading ? (\n        <div>Loading the movie...</div>\n      ) : (\n        <>\n          {movie && (\n            <>\n              <section className={css.details}>\n                {movie.poster_path && (\n                  <img\n                    className={css.poster}\n                    src={IMAGES_BASE_URL + movie.poster_path}\n                    alt={movie.title}\n                  />\n                )}\n                <div className={css.container}>\n                  <h2>\n                    {movie.title +\n                      (!!movie.release_date\n                        ? formatDate(movie.release_date)\n                        : '')}\n                  </h2>\n                  {!!movie.vote_average && (\n                    <p>Users score: {Math.round(movie.vote_average * 10)}%</p>\n                  )}\n                  <h3>Overview</h3>\n                  <p>{movie.overview}</p>\n                  {!!movie.genres.length && (\n                    <>\n                      <h3>Genres</h3>\n                      <div>\n                        {movie.genres.map(genre => (\n                          <p>{genre.name}</p>\n                        ))}\n                      </div>\n                    </>\n                  )}\n                </div>\n              </section>\n              <section className={css.additional}>\n                <h3>Additional information</h3>\n                <ul className={css.nav}>\n                  <li className={css['nav-item']}>\n                    <NavLink\n                      className={({ isActive }) =>\n                        `${isActive && css.activeLink} ${css.navLink}`\n                      }\n                      to=\"cast\"\n                    >\n                      Cast\n                    </NavLink>\n                  </li>\n                  <li className={css['nav-item']}>\n                    <NavLink\n                      className={({ isActive }) =>\n                        `${isActive && css.activeLink} ${css.navLink}`\n                      }\n                      to=\"reviews\"\n                    >\n                      Reviews\n                    </NavLink>\n                  </li>\n                </ul>\n\n                <Suspense fallback={<div>Loading subpage...</div>}>\n                  <Outlet />\n                </Suspense>\n              </section>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["formatDate","date","format","Date","axios","api_key","getApiData","url","data","response","Error","statusText","console","log","message","getTrending","getDetails","movie_id","getCredits","getReviews","getSearchByQuery","query","params","MovieDetails","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useState","movie","setMovie","isLoading","setLoading","useEffect","then","results","className","css","to","current","poster_path","src","alt","title","release_date","vote_average","Math","round","overview","genres","length","map","genre","name","isActive","Suspense","fallback"],"sourceRoot":""}