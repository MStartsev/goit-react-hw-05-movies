{"version":3,"file":"static/js/240.dc335810.chunk.js","mappings":"2NACA,EAA0B,sBAA1B,EAAuD,mBAAvD,EAAiF,mBAAjF,EAA2G,mBAA3G,EAAqI,mB,oECStH,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAkBC,EAAlB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IAEXE,EAAAA,EAAAA,IAAWR,GACRS,MAAK,gBAAGN,EAAH,EAAGA,KAAH,OAAcC,EAAQD,EAAtB,IACLO,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,sBAAuBF,EAAMG,QAA7C,IACXC,QAAQT,GAAW,GACvB,GAAE,CAACN,KAGF,8BACGK,GACC,8CAEA,8BACGF,EAAKa,QACJ,eAAIC,UAAWC,EAAf,SACGf,EAAKgB,KAAI,SAAAC,GAAK,OACb,gBAAIH,UAAWC,EAAf,UACGE,EAAMC,cACL,gBACEJ,UAAWC,EACXI,IA7BE,kCA6BqBF,EAAMC,aAC7BE,IAAKH,EAAMI,QAGb,gBACEP,UAAWC,EACXI,IAAKG,EACLF,IAAKH,EAAMI,QAGf,4BACE,cAAGP,UAAWC,EAAd,SAAyBE,EAAMI,QAC/B,+BAAOJ,EAAMM,kBAhBaN,EAAMO,GADvB,OAuBjB,cAAGV,UAAWC,EAAd,kDAMX,C,+LCzDDU,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,oCAOhB,IAAMC,EAAU,mCAAG,WAAOC,EAAKC,GAAZ,gGAEQJ,EAAAA,EAAAA,IAAUG,EAAKC,GAFvB,WAETC,EAFS,QAIDD,KAJC,sBAIW,IAAIE,MAAMD,EAASE,YAJ9B,gCAKRF,EAASD,MALD,gCAOfpB,QAAQC,IAAR,sCAA2CkB,EAA3C,aAAmD,KAAMjB,UAP1C,yDAAH,wDAWHsB,EAAW,mCAAG,8FAAkBN,EAAW,uBAA7B,mFAAH,qDAEXO,EAAU,mCAAG,WAAMC,GAAN,iFAClBR,EAAW,UAAD,OAAWQ,IADH,mFAAH,sDAGV9B,EAAU,mCAAG,WAAM8B,GAAN,iFAClBR,EAAW,UAAD,OAAWQ,EAAX,aADQ,mFAAH,sDAGVC,EAAU,mCAAG,WAAMD,GAAN,iFAClBR,EAAW,UAAD,OAAWQ,EAAX,aADQ,mFAAH,sDAGVE,EAAgB,mCAAG,WAAMC,GAAN,iFACxBX,EAAW,gBAAiB,CAChCY,OAAQ,CACND,MAAAA,KAH0B,mFAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","servises/tmdb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Cast_profile__m8TAO\",\"list\":\"Cast_list__GlWio\",\"text\":\"Cast_text__P2vgu\",\"name\":\"Cast_name__6UbFm\",\"item\":\"Cast_item__a0CDL\"};","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCredits } from 'servises/tmdb-api';\nimport css from './Cast.module.css';\n\nimport defaultPhotoProfile from '../../images/defaultPhoto.jpg';\n\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w154';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getCredits(movieId)\n      .then(({ cast }) => setCast(cast))\n      .catch(error => console.log('Error fetching cast', error.message))\n      .finally(setLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading ? (\n        <div>Loading cast...</div>\n      ) : (\n        <>\n          {cast.length ? (\n            <ul className={css.list}>\n              {cast.map(actor => (\n                <li className={css.item} key={actor.id}>\n                  {actor.profile_path ? (\n                    <img\n                      className={css.profile}\n                      src={IMAGES_BASE_URL + actor.profile_path}\n                      alt={actor.name}\n                    />\n                  ) : (\n                    <img\n                      className={css.profile}\n                      src={defaultPhotoProfile}\n                      alt={actor.name}\n                    />\n                  )}\n                  <div>\n                    <p className={css.name}>{actor.name}</p>\n                    <p>as {actor.character}</p>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p className={css.text}>We don't have cast for this movie</p>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '1f2e1346f84e3b2d486a79ce9b661dcb';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nconst getApiData = async (url, data) => {\n  try {\n    const response = await axios.get(url, data);\n\n    if (!response.data) throw new Error(response.statusText);\n    return response.data;\n  } catch (error) {\n    console.log(`Error making GET request to ${url}: ${error.message}`);\n  }\n};\n\nexport const getTrending = async () => await getApiData('/trending/movie/day');\n\nexport const getDetails = async movie_id =>\n  await getApiData(`/movie/${movie_id}`);\n\nexport const getCredits = async movie_id =>\n  await getApiData(`/movie/${movie_id}/credits`);\n\nexport const getReviews = async movie_id =>\n  await getApiData(`/movie/${movie_id}/reviews`);\n\nexport const getSearchByQuery = async query =>\n  await getApiData(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n"],"names":["Cast","movieId","useParams","useState","cast","setCast","isLoading","setLoading","useEffect","getCredits","then","catch","error","console","log","message","finally","length","className","css","map","actor","profile_path","src","alt","name","defaultPhotoProfile","character","id","axios","api_key","getApiData","url","data","response","Error","statusText","getTrending","getDetails","movie_id","getReviews","getSearchByQuery","query","params"],"sourceRoot":""}